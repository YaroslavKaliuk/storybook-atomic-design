import{j as r}from"./jsx-runtime-D_zvdyIk.js";import{A as s}from"./appBar-tFPqSx4O.js";import"./index-xf0-QVxD.js";import"./_commonjsHelpers-CqkleIqs.js";import"./index-BKyFwriW.js";import"./IconMonoClose-COlRpOzk.js";import"./IconMonoFullscreenExit-BikgWgQk.js";import"./enums-j1G55Avl.js";import"./etag-C4mhMif4.js";import"./link-i8Vdy082.js";import"./logo-CpEpTeSO.js";import"./IconMultiLogoDocumentGPS-ByIKl3WH.js";import"./input-Cb6zUZKs.js";import"./IconMonoVisibilityOff-CrMAnSJv.js";import"./title-DMBq_gjU.js";import"./useAppType-DQSG-477.js";import"./button-Dn6_MprM.js";import"./loader-DjLiw7AR.js";import"./avatar-Dw7VE7nt.js";import"./select-BiNXl3aT.js";import"./IconMonoCaretDown-nbCVVf6N.js";import"./tokenID-BtSuzah3.js";import"./IconMonoKey-genEvUgq.js";import"./tooltip-BZIAJRfH.js";import"./switcher-CYqRQcCk.js";import"./snackbar-3enaQt1z.js";import"./useTranslation-CO63FDpr.js";import"./nonIterableRest-DsePzpQ9.js";import"./textarea-Cxlbd_yw.js";import"./copyLink-BytqdUi0.js";import"./IconMonoCopy-BHCnYk-6.js";import"./envelope-UyDJcHHj.js";import"./IconMultiEnvelope-DJwiFN9O.js";import"./separator-Lc8UIbZS.js";import"./sortButton-DO6JhAAs.js";import"./IconMonoArrowDown-DIN74zz8.js";import"./backButton-I5T8UvXO.js";import"./IconMonoChevronLeft-DNt7JkQa.js";import"./navBarItem-BmhEqPzT.js";import"./paperStatus-Nc_ueS_S.js";import"./IconMonoCheck-BK_tYEQw.js";import"./IconMonoDownload-ChYAXVJF.js";import"./actionMenuItem-D6ZAt_0h.js";import"./copyLinkSecure-DKkeiFSN.js";import"./IconMonoCopyLinkSecure-DMFOQmOk.js";import"./privateMessage-DzZNFr4S.js";import"./IconMonoChevronDown-Cg9ovnWJ.js";import"./greenTechnology-BbfY9D-t.js";import"./IconMonoLeaf-BVG7aNLw.js";import"./actionMenuButton-BDwytS_X.js";import"./IconMonoInlineDots-B8UHOh6O.js";const pt={title:"Components/Molecules/AppBar",component:s,parameters:{layout:"centered",docs:{description:{component:'<a href="https://www.figma.com/design/ywExpWsTLdXvZ9ZEelZdAq/Document-GPS---Design-System-1?node-id=738-36236&t=Quxr71wysmiRqKSg-4" target="_blank"><b>Figma Design</b></a>'}}},tags:["autodocs"],argTypes:{classes:{control:{type:"object"},description:"Classes to apply to the app bar",table:{type:{summary:'Partial<Record<"root" | "buttonDrag" | "buttonFullscreen" | "buttonClose", string>>'}}},dragHandleRef:{control:!1,description:"Ref to the drag handle button",table:{type:{summary:"React.RefObject<HTMLButtonElement>"}}},onFullscreenChange:{control:!1,description:"Callback when fullscreen state changes",table:{type:{summary:"(isFullscreen: boolean) => void"}}},onClose:{control:!1,description:"Callback when close button is clicked",table:{type:{summary:"() => void"}}},isFullscreen:{control:"boolean",description:"Whether the app bar is in fullscreen mode",table:{type:{summary:"boolean"}}}},args:{isFullscreen:!1,onFullscreenChange:()=>{},onClose:()=>{},classes:{}},decorators:[o=>r.jsx("div",{style:{width:"22.5rem"},children:r.jsx(o,{})})]},t={render:o=>r.jsx(s,{...o})};var e,p,i;t.parameters={...t.parameters,docs:{...(e=t.parameters)==null?void 0:e.docs,source:{originalSource:`{
  render: args => <AppBar {...args} />
}`,...(i=(p=t.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const it=["Default"];export{t as Default,it as __namedExportsOrder,pt as default};
